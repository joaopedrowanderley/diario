/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.diario.view;

import br.com.diario.dao.AnotacaoDAO;
import br.com.diario.model.Anotacao;
import br.com.diario.util.MenssagensUtil;
import br.com.diario.util.DateUtil;
import java.util.Date;
import java.util.List;
import javax.swing.table.DefaultTableModel;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author jo√£o pedro
 */
public class AnotacoesJFrame extends javax.swing.JFrame {

    /**
     * Creates new form AnotacoesJFrame
     */
    AnotacaoDAO dao = new AnotacaoDAO();
    private Anotacao anotacaoSelecionada  ;
    //private AnotacoesJFrame principal;

    public Anotacao getAnotacaoSelecionada() {
        return anotacaoSelecionada;
    }

    public void setAnotacaoSelecionada(Anotacao anotacaoSelecionada) {
        this.anotacaoSelecionada = anotacaoSelecionada;
    }
    
    /*public AnotacoesJFrame(AnotacoesJFrame parent){
        this.principal = parent;
    }*/
    
    public AnotacoesJFrame() {
        initComponents();
        setProperties();
    }
    
    public void setProperties(){
        inserirButton.setText(MenssagensUtil.getString("msg.button.inserir"));
        editarButton.setText(MenssagensUtil.getString("msg.button.editar"));
        removerButton.setText(MenssagensUtil.getString("msg.button.excluir"));
        visualizarButton.setText(MenssagensUtil.getString("msg.button.visualizar"));
        preencherTabela(null);
    }
    void preencherTabela(List<Anotacao> param) {
        try {

            List<Anotacao> lista = (param == null) ? dao.listar() : param;

            DefaultTableModel model = new DefaultTableModel();

            model.setColumnCount(2);
            model.setColumnIdentifiers(new String[]{ 
                MenssagensUtil.getString(MenssagensUtil.MSG_TABELA_DATA),
                MenssagensUtil.getString(MenssagensUtil.MSG_TABELA_TEXTO)});
              model.setRowCount(lista.size());

            for (int i = 0; i < lista.size(); i++) {
               model.setValueAt(lista.get(i).getData(), i, 0); 
                model.setValueAt(lista.get(i).getTexto(), i, 1);
                
            }

            tableAnotacoes.setModel(model);
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tableAnotacoes = new javax.swing.JTable();
        inserirButton = new javax.swing.JButton();
        editarButton = new javax.swing.JButton();
        removerButton = new javax.swing.JButton();
        visualizarButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tableAnotacoes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tableAnotacoes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableAnotacoesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableAnotacoes);

        inserirButton.setText("Inserir");
        inserirButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inserirButtonActionPerformed(evt);
            }
        });

        editarButton.setText("Editar");
        editarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editarButtonActionPerformed(evt);
            }
        });

        removerButton.setText("Remover");
        removerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removerButtonActionPerformed(evt);
            }
        });

        visualizarButton.setText("Visualizar");
        visualizarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                visualizarButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 5, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(inserirButton)
                        .addGap(31, 31, 31)
                        .addComponent(editarButton)
                        .addGap(34, 34, 34)
                        .addComponent(removerButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(visualizarButton)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 44, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(inserirButton)
                    .addComponent(editarButton)
                    .addComponent(removerButton)
                    .addComponent(visualizarButton))
                .addGap(24, 24, 24))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void inserirButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inserirButtonActionPerformed
        // TODO add your handling code here:
        anotacaoSelecionada = null;
        AnotacaoJFrame janela = new AnotacaoJFrame(this);
         janela.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        janela.setVisible(true);
    }//GEN-LAST:event_inserirButtonActionPerformed

    private void editarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editarButtonActionPerformed
        // TODO add your handling code here:
        if(anotacaoSelecionada != null){
            
            EditarJFrame janela = new EditarJFrame(this);
            janela.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
            janela.setVisible(true);
        }
        else {
            JOptionPane.showMessageDialog(this, MenssagensUtil.getString(MenssagensUtil.MSG_ERRO_SELECIONAR));
        }
    }//GEN-LAST:event_editarButtonActionPerformed

    private void removerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removerButtonActionPerformed
        // TODO add your handling code here:
        if (anotacaoSelecionada != null) {
            try {

                int op = JOptionPane.showConfirmDialog(this, "Deseja realmente excluir " + anotacaoSelecionada.getData(), "Excluir", JOptionPane.OK_CANCEL_OPTION);
                if (op == JOptionPane.OK_OPTION) {
                    dao.remover(anotacaoSelecionada);
                    preencherTabela(null);
                    anotacaoSelecionada = null;
                }

            } catch (Exception ex) {
                
            }
        } else {
            JOptionPane.showMessageDialog(this, "Selecione uma anotacao!");
        }
    }//GEN-LAST:event_removerButtonActionPerformed

    private void tableAnotacoesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableAnotacoesMouseClicked
        // TODO add your handling code here:
        int row = tableAnotacoes.rowAtPoint(evt.getPoint());
        // retorna a data da anotacao selecionado
        Date data = (Date) tableAnotacoes.getModel().getValueAt(row, 0);
        Anotacao a = new Anotacao();
        a.setData(data);
     

        try {
            anotacaoSelecionada = dao.buscar(a.getData());

            System.out.println(anotacaoSelecionada);

        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_tableAnotacoesMouseClicked

    private void visualizarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_visualizarButtonActionPerformed
        // TODO add your handling code here:
        if(anotacaoSelecionada != null){
            
            VisualizarJFrame janela = new VisualizarJFrame(this);
            janela.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
            janela.setVisible(true);
        }
        else {
            JOptionPane.showMessageDialog(this, MenssagensUtil.getString(MenssagensUtil.MSG_ERRO_SELECIONAR));
        }
    }//GEN-LAST:event_visualizarButtonActionPerformed

    /*private void tableAnotacoesMouseClicked(java.awt.event.MouseEvent evt) {                                           
        // TODO add your handling code here:
        int row = tableAnotacoes.rowAtPoint(evt.getPoint());
        // retorna a data da anotacao selecionado
        Date data = (Date) tableAnotacoes.getModel().getValueAt(row, 0);
        Anotacao a = new Anotacao();
        a.setData(data);
     

        try {
            anotacaoSelecionada = dao.buscar(a.getData());

            System.out.println(anotacaoSelecionada);

        } catch (Exception e) {
            e.printStackTrace();
        }
        
    }*/
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AnotacoesJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AnotacoesJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AnotacoesJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AnotacoesJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
       java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AnotacoesJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton editarButton;
    private javax.swing.JButton inserirButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton removerButton;
    private javax.swing.JTable tableAnotacoes;
    private javax.swing.JButton visualizarButton;
    // End of variables declaration//GEN-END:variables
}
